# Module Release Workflow

# Useful References:
#   - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#   - https://docs.github.com/en/actions/learn-github-actions/contexts
#   - https://docs.github.com/en/actions/learn-github-actions/environment-variables
#   - https://docs.github.com/en/actions/using-workflows/triggering-a-workflow
#   - https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
#   - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on

name: Module Release Build

env:
  node_version: 18
  latest_manifest_url: "https://github.com/${{github.repository}}/releases/latest/download/module.json"
  release_download_url: "https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip"

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Modify module.json with values specific to the release.
      - name: Modify Module Manifest
        id: sub_manifest_link_version
        uses: cschleiden/replace-tokens@v1
        with:
          files: 'module.json'
        env:
          MANIFEST: ${{ env.latest_manifest_url }}
          DOWNLOAD: ${{ env.release_download_url }}

      # Create a "module.zip" archive containing all the module's required files.
      - name: Create Module Archive
        run: |
          zip --recurse-paths ./module.zip  \
            LICENSE                         \
            module.json                     \
            Community/                   \
            Factions/                    \
            Icons/                         \
            Images/                          \
            Maps/                          \
            Music/                          \
            packs/                           \
            pages/                         \
            scenes/                          \
            Songs/                         \
            Sounds/                      \
            tokens/                             

      # Update the GitHub release with the manifest and module archive files.
      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './module.json, ./module.zip'
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
